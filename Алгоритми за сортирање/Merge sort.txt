#include <bits/stdc++.h>
using namespace std;
void merg(vector<int>& a,int l,int r,int m)
{
    int n1=m-l+1, n2=r-m;
    vector<int> L(n1),R(n2);
    for(int i=0;i<n1;i++)
    {
        L[i]=a[l+i];
    }
    for(int i=0;i<n2;i++)
    {
        R[i]=a[m+1+i];
    }
    int i=0,j=0,k=l;
    while(i<n1 && j<n2)
    {
        if(L[i]>R[j])
        {
            a[k++]=R[j++];
        }
        else
        {
            a[k++]=L[i++];
        }
    }
    while(i<n1)
    {
        a[k++]=L[i++];
    }
    while(j<n2)
    {
        a[k++]=R[j++];
    }

}
void mergesort(vector<int>& a,int l,int r)
{
    if(l<r)
    {
    int m=l+(r-l)/2;
    mergesort(a,l,m);
    mergesort(a,m+1,r);
    merg(a,l,r,m);

    }
}
int main()
{
    random_device rd;
    mt19937 gen(rd());
    uniform_int_distribution<> distVal(1, 9000000);

    int n=1000000;
    vector<int> a(n);

    for(int i=0;i<n;i++)
    {
      a[i] = distVal(gen);
    }
    mergesort(a,0,n-1);


    return 0;
}

Овoj вид на сортирање се нарекува Merge sort и има временска сложеност од О(n*log n).
Execution time (3 теста):
- 1.26 секунди
- 0.855 секунди
- 0.874 секунди
Функцијата има мемориска сложеност О(n).
